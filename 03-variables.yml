- name: Variables Demo Practice
  hosts: localhost
  vars:
    exx: this is charan play.example.com and the website is example website
    Number1: 1
    Number2: 100.99
    BOOLEAN1: true
    BOOLEAN2: false
    BOOLEAN3: yes
    BOOLEAN4: no



  vars_files:
    - varsnum.yml
    - usernames.yml



  tasks:
    - name: Print URL of example
      ansible.builtin.debug:
        msg: '{{exx}} and the number is {{Number2}}'


#    - name: Print fruit names in Aldi
#      ansible.builtin.debug:
#        msg: Fruit name is - {{Fruit_name}}
#      vars:
#        Fruit_name: Apple and Banane
#
#
#    - name: Print the given project name
#      ansible.builtin.debug:
#        msg: Project Name we have assigned is {{Project_Name}}
#
#
#    - name: Print the User Name we have given
#      ansible.builtin.debug:
#        msg: User Name we have assigned is {{User_Name}}
#
#
#    - name: Print Command Line Input Variable
#      ansible.builtin.debug:
#        msg: The Course Name we have assigned is {{Course_Name}}


#    - name: List Variables
#      ansible.builtin.debug:
#        msg: list of fruit names in sequence is {{Fruits[0]}}, {{Fruits[1]}}
#      vars:
#        Fruits:
#          - apple
#          - banane
#          - orange
#
#    - name: Map Variables
#      ansible.builtin.debug:
#        msg: Course name is {{ Course["Name"][1] }} and the Trainer Name is {{ Course["Trainer"] }}
#      vars:
#        Course:
#          Name:
#          - Devops
#          - Java
#          Trainer: raghu
#



# you can access a variable without qoutes, however, if the value is starting with variable then use single/double qoutes
#variable not starting with value Ex: msg: URL -{{URL}}
# variable stating with value Ex: msg: "{{URl}}", in this case we need to qoute it.


    - name: Execute shell command
      ansible.builtin.shell: uptime
      register: OUT

    - name: Print out command
      ansible.builtin.debug:
        msg:
        - "{{OUT}}"
        -  this is the new line('\n') }}"
        - \n
        - "{{OUT.stdout.split('\n')*100}}"

